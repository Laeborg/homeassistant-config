# Notify if Location Mode is Home and Sensor changes status
- alias: '[SECURITY] Notify when sensor changes status'
  
  trigger:
    - platform: state
      entity_id: group.alarmsystem_sensors
      
  action:
    - service: notify.pushover
      data:
        message: |
          {% for entity_id in states.group.alarmsystem_sensors.attributes.entity_id %}
            {% if as_timestamp(states['group.alarmsystem_sensors']['last_changed']) - as_timestamp(states[entity_id]['last_changed']) < 5 %}
              {{ state_attr(entity_id, 'friendly_name') | replace(' contact', '') }} changed status to {{ states(entity_id) | replace('off', 'closed') | replace('on', 'open') }}
            {% endif %}
          {% endfor %}
        title: Sensor changed status
        
# Notify and play sound when front door changes status
- alias: '[SECURITY] Notify and play sound when Front Door changes status'

  trigger:
    - platform: state
      entity_id: binary_sensor.front_door_contact_sensor_contact
      to: 'on'
      
    - platform: state
      entity_id: binary_sensor.front_door_contact_sensor_contact
      to: 'off'
      
  action:
    - service: notify.pushover
      data:
        message: Front Door changed status to {{ states.binary_sensor.front_door_contact_sensor_contact.state | replace('off', 'closed') | replace('on', 'open') }}
        title: Front Door {{ states.binary_sensor.front_door_contact_sensor_contact.state | replace('off', 'closed') | replace('on', 'opened') }}
    
    - condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.front_door_contact_sensor_contact
          state: 'on'
          
    - service: script.play_tts_group
      data:
        entities:
          - media_player.bedroom_clock
          - media_player.office_speaker
          - media_player.living_room_speaker
          - media_player.kitchen_display
        message: "Front Door {{ states.binary_sensor.front_door_contact_sensor_contact.state | replace('off', 'closed') | replace('on', 'opened') }}"
        volume: |
          {% if states.alarm_control_panel.home_monitoring.state == 'disarmed' %}
            0.6
          {% elif states.alarm_control_panel.home_monitoring.state == 'armed_night' %}
            0.5
          {% else %}
            1
          {% endif %}
        
# Notify when alarm is triggered
- alias: '[SECURITY] Notify when triggered'

  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_monitoring
      to: 'triggered'
      
  action:
    - service: notify.pushover
      data:
        message: Home Monitoring have been triggered by sensors
        title: Warning - Intruder Alert
        data:
          priority: 1
          url: !secret webhook_disarm_url
          url_title: Abort & disarm